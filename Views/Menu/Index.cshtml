@using WEB.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<a href="/Menu/Language?lang=VIE">Việt Nam</a>
    <a href="/Menu/Language?lang=ENG">English</a>*@
@*@Session["lang"]*@

<div class="page-content fade-in-up">
    <div class="ibox mt-3">
        <div class="ibox-head">
            <div class="ibox-title col-md-3">@NgonNgu.label("List")</div>
            <div class="btn-group btn-rounded">
                <button class="btn btn-success" onclick="window.location ='/Menu/Create'">@NgonNgu.label("CreateNew")</button>
                <button class="btn btn-danger" onclick="js_acceptUpdate();"> @NgonNgu.label("l_update")</button>
                <button class="btn btn-default" data-toggle="modal" data-target="#myModal1"> @NgonNgu.label("ldelete")</button>
            </div>
        </div>
        <div class="ibox-body" id="div-content">
            @Html.Partial("~/Views/Menu/Tables/__tblIndex.cshtml")
        </div>
    </div>
</div>
<div class="modal fade" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Bạn muốn xóa những bản ghi này không?</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="js_acceptDelete();">Delete</button>
            </div>
        </div>
    </div>
</div>
<script src="~/Content/assets/vendors/jquery/dist/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(function () {
        js_GetList();
    });
    function js_ReloadTable() {
        $('#example-table')
            .DataTable({
                lengthMenu: [[10, 20, 50, 70, 100, -1], [10, 20, 50, 70, 100, 'All']],
                "pageLength": 10,
                columnDefs: [],
                "orderClasses": false,
                "deferRender": true,
                autoWidth: false,
                bAutoWidth: false,
                "searching": false,
                order: [],
                "language": {
                    "emptyTable": "Không có dữ liệu !"
                }
            });
    }
    function js_GetList() {
        window.scrollTo(0, 0);
        var capp = 'MN';
        $.ajax({
            url: '/Menu/getList',
            type: 'POST',
            data: JSON.stringify({ capp: capp }),
            contentType: 'application/json, charset=utf-8',
            beforeSend: function () {
                js_Loading(true, 1);
            },
            success: function (data) {
                $('#div-content').html(data);
                js_ReloadTable();
                js_Loading(false, 1);
            },
            error: function () {
                js_Loading(false, 1);
            }
        });
    }
    function js_acceptDeleteRow() {
        debugger;
        var cboxes = document.getElementsByName('check[]');
        var arrCheckbox4 = [];

        var i = 0;
        for (var i = 0; i < cboxes.length; i++) {
            if (cboxes[i].checked) {
                var po = {};
                po.ID = cboxes[i].value;

                console.log(po);
                arrCheckbox4.push(po);
            }
        }

        if (arrCheckbox4.length > 0) {
            $.ajax({
                url: '/Menu/DeleteMenu',
                type: 'POST',
                data: JSON.stringify({ lst: arrCheckbox4 }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        )
                        js_GetList();
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
        }
    }
    function js_acceptDelete() {

        var cboxes = document.getElementsByName('check[]');
        var arrCheckbox4 = [];

        var i = 0;
        for (var i = 0; i < cboxes.length; i++) {
            if (cboxes[i].checked) {
                var po = {};
                po.ID = cboxes[i].value;

                console.log(po);
                arrCheckbox4.push(po);
            }
        }

        if (arrCheckbox4.length == 0) {
            Swal.fire(
                'Warning!',
                'Vui lòng chọn 1 bản ghi!',
                'warning'
            )
            return;
        }

        if (arrCheckbox4.length > 0) {
            $.ajax({
                url: '/Menu/DeleteMenu',
                type: 'POST',
                data: JSON.stringify({ lst: arrCheckbox4 }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Deleted!',
                            'Your file has been deleted.',
                            'success'
                        )
                        js_GetList();
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
        }
    }
    function fomart_split(input, number) {
        try {
            var value = input;
            if (value != null && !value.length < 1) {
                return value.split(" - ")[number];
            } else {
                return "";
            }
        } catch (e) {

        }
    }
    function js_acceptUpdateStatus() {
        debugger;

        var cboxes = document.getElementsByName('check[]');
        var arrCheckbox4 = [];
        var i = 0;
        for (var i = 0; i < cboxes.length; i++) {
            if (cboxes[i].checked) {
                var po = {};
                if ($('input[name="TrangThai"]:checked')) {
                    po.Status = '0';
                }

                po.ID = cboxes[i].value;
                arrCheckbox4.push(po);
                console.log(arrCheckbox4);
            }
        }

        if (arrCheckbox4.length == 0) {
            Swal.fire(
                'Warning!',
                'Vui lòng chọn 1 bản ghi!',
                'warning'
            )
            return;
        }

        if (arrCheckbox4.length > 0) {
            $.ajax({
                url: '/Menu/UpdateStatus',
                type: 'POST',
                data: JSON.stringify({ lst: arrCheckbox4 }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Update!',
                            'Your file has been update.',
                            'success'
                        )
                        js_GetList();
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
        }
    }
    function js_acceptUpdateStatus1() {
        debugger;

        var cboxes = document.getElementsByName('check[]');
        var arrCheckbox4 = [];
        var i = 0;
        for (var i = 0; i < cboxes.length; i++) {
            if (cboxes[i].checked) {
                var po = {};
                if ($('input[name="TrangThai"]')) {

                    po.Status = '1';
                }

                po.ID = cboxes[i].value;
                arrCheckbox4.push(po);
                console.log(arrCheckbox4);
            }
        }

        if (arrCheckbox4.length == 0) {
            Swal.fire(
                'Warning!',
                'Vui lòng chọn 1 bản ghi!',
                'warning'
            )
            return;
        }

        if (arrCheckbox4.length > 0) {
            $.ajax({
                url: '/Menu/UpdateStatus',
                type: 'POST',
                data: JSON.stringify({ lst: arrCheckbox4 }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Update!',
                            'Your file has been update.',
                            'success'
                        )
                        js_GetList();
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
        }
    }
    function js_acceptUpdate() {
        debugger;

        var cboxes = document.getElementsByName('check[]');
        var arrCheckbox4 = [];
        var i = 0;
        for (var i = 0; i < cboxes.length; i++) {
            if (cboxes[i].checked) {

                var po = {};

                po.Parent_ID = fomart_split($('#row' + cboxes[i].id + ' select[name="Parent"]').val().trim(), 0);
                var L = fomart_split($('#row' + cboxes[i].id + ' select[name="Parent"]').val().trim(), 1);
                po.Level = L + '00000';
                po.ID = cboxes[i].value;
                arrCheckbox4.push(po);
                console.log(arrCheckbox4);

            }
        }

        if (arrCheckbox4.length == 0) {
            Swal.fire(
                'Warning!',
                'Vui lòng chọn 1 bản ghi!',
                'warning'
            )
            return;
        }

        if (arrCheckbox4.length > 0) {
            $.ajax({
                url: '/Menu/UpdateParent',
                type: 'POST',
                data: JSON.stringify({ lst: arrCheckbox4 }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Update!',
                            'Your file has been update.',
                            'success'
                        )
                        js_GetList();
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
        }
    }
</script>