@{
    ViewBag.Title = "Update";
}

<style>
    input[type="Size"] {
        appearance: none;
        -moz-appearance: none;
        -webkit-appearance: none;
        background: none;
        border: 0;
        cursor: pointer;
        height: 15em;
        padding: 0;
        width: 15em;
    }

    *:focus {
        border-radius: 0;
        outline: none;
    }

    ::-webkit-Size-swatch-wrapper {
        padding: 0;
    }

    ::-webkit-Size-swatch {
        border: 0;
        border-radius: 0;
    }

    ::-moz-Size-swatch,
    ::-moz-focus-inner {
        border: 0;
    }

    ::-moz-focus-inner {
        padding: 0;
    }
</style>
<input type="text" name="name" id="ID" value="@ViewBag.list_detail.ID" hidden />
<div class="page-content fade-in-up">
    <div class="ibox mt-3">
        <div class="ibox-head">
            <div class="ibox-title col-md-3">Update</div>
        </div>
        <div class="ibox-body" id="div-content">
            <div class="row">
                <div class="col-md-12">
                    <div class="row mt-2">
                        <label class="col-md-3">Tên kích thước</label>
                        <div class="col-md-5" style="width: 30%; padding-left: 15px">
                            <input type="text" name="SizeName" id="SizeName" value="@ViewBag.list_detail.Name" class="form-control" />
                        </div>
                    </div>
                    <div class="row mt-2">
                        <label class="col-md-3">Thứ tự</label>
                        <div class="col-md-5" style="width: 30%; padding-left: 15px">
                            <input type="number" name="ord" id="ord" value="@ViewBag.list_detail.Orders" class="form-control" />
                        </div>
                    </div>
                    <div class="row mt-2">
                        <label class="col-md-3">Size mặc định</label>
                        <div class="col-md-3">
                            <label class="ui-checkbox ui-checkbox-primary">
                                @if (@ViewBag.list_detail.Active == "1")
                                {
                                    <input type="checkbox" id="active" name="active" value="active" checked>
                                }
                                else
                                {
                                    <input type="checkbox" id="active" name="active" value="active">
                                }
                                <span class="input-span"></span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row mt-3">
                <div class="" style="margin-left:10px;"></div>
                <div class="">
                    <button class="btn btn-outline-success btn-border" onclick="Update();">Update</button>
                    <button class="btn btn-outline-primary btn-border" onclick="js_clear();">Clear</button>
                </div>
            </div>
        </div>
    </div>
</div>
@section jsFooter{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="~/Scripts/ckfinder/ckfinder.js" type="text/javascript"></script>
    <script src="~/Scripts/ckeditor/ckeditor.js" type="text/javascript"></script>
    <script src="~/Content/assets/js/scripts/form-plugins.js" type="text/javascript"></script>
    <script type="text/javascript">
        CKEDITOR.replace('txttomtat', {
            toolbar: [
                { name: 'document', items: ['Source', '-', 'NewPage', 'Preview', '-', 'Templates'] },	// Defines toolbar group with name (used to create voice label) and items in 3 subgroups.
                ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'],			// Defines toolbar group without name.
                '/',																					// Line break - next group will be placed in new line.
                { name: 'basicstyles', items: ['Bold', 'Italic'] }
            ]
        });
    </script>
    <script>
        $(function () {
        });
        function Update() {
            var lst = {};
            lst.ID = $('#ID').val().trim();
            lst.Name = $('#SizeName').val().trim();
            lst.Orders = $('#ord').val();
            if ($('input[name="active"]:checked').val() == "active") {
                lst.Active = '1';
            } else {
                lst.Active = '0';
            }
            console.log(lst);
            $.ajax({
                url: '/Size/UpdateSize',
                type: 'POST',
                data: JSON.stringify({ lst: lst }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {

                    if (data == 1) {
                        Swal.fire(
                            'Update!',
                            'Update successful!',
                            'success'
                        )
                        js_Loading(false, 1);
                    }

                },
                error: function () {
                    js_Loading(false, 1);
                }

            });
            window.location = '/Size/Index';
        }
        function loc_xoa_dau(str) {
            str = str.toLowerCase();
            // Gộp nhiều dấu space thành 1 space
            str = str.replace(/\s+/g, '-');
            // loại bỏ toàn bộ dấu space (nếu có) ở 2 đầu của chuỗi
            str = str.trim();
            // bắt đầu xóa dấu tiếng việt  trong chuỗi
            str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, "a");
            str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, "e");
            str = str.replace(/ì|í|ị|ỉ|ĩ/g, "i");
            str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, "o");
            str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, "u");
            str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, "y");
            str = str.replace(/đ/g, "d");
            str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, "A");
            str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, "E");
            str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, "I");
            str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, "O");
            str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, "U");
            str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, "Y");
            str = str.replace(/Đ/g, "D");
            return str;
        }
        function getName() {
            debugger;
            var Name = $('#Name').val().trim();
            $.ajax({
                url: '/GroupProduct/getName',
                type: 'POST',
                data: JSON.stringify({ Name: Name }),
                contentType: 'application/json, charset=utf-8',
                beforeSend: function () {
                    js_Loading(true, 1);
                },
                success: function (data) {
                    if (data.code == 1) {
                        $('#Rewrite').val(data.link.Link + ".html");
                    }
                    if (data.code == 2) {
                        $('#Rewrite').val(data.link.Link1 + ".html");
                    }
                    if (data.code == 3) {
                        var a = $('#Name').val().trim();
                        $('#Rewrite').val(data.link.Link1 + loc_xoa_dau(a) + ".html");
                    }
                    if (data == 0) {
                        var a = $('#Name').val().trim();
                        $('#Rewrite').val(loc_xoa_dau(a) + ".html");
                    }
                    js_Loading(false, 1);
                },
                error: function () {
                    js_Loading(false, 1);
                }

            });

        }
    </script>
}